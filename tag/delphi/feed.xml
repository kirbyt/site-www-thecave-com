<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: delphi | thecave | A Hideout for Programmers, Indie Devs, Solopreneurs]]></title>
  <link href="http://www.thecave.com/tag/delphi/feed.xml" rel="self"/>
  <link href="http://www.thecave.com/"/>
  <updated>2017-04-16T11:24:39+00:00</updated>
  <id>http://www.thecave.com/</id>
  <author>
    <name><![CDATA[Kirby Turner]]></name>
    
  </author>

  
  <entry>
    
    <title type="html"><![CDATA[Delphi (BDS) Live Templates for SQL Server]]></title>
    
    <link href="http://www.thecave.com/2006/12/06/delphi-bds-live-templates-for-sql-server/"/>
    <updated>2006-12-06T00:00:00+00:00</updated>
    <id>http://www.thecave.com/2006/12/06/delphi-bds-live-templates-for-sql-server</id>
    <tag>delphi</tag>
    <description><![CDATA[<p>Here are a few Delphi (BDS) Live Templates I created for writting SQL Server script:<br /><br /><b>Create SQL Server Table</b><br />&lt;pre&gt;<br /><br /><br />        version=”1.0.0”&gt;<br /> <br /> <br />      Create table for SQL Server.<br /> <br /> <br />      Kirby Turner<br /> <br /><br /> <br /> <br />        TableName<br /> <br /> <br /> <br /> <br /><br /> <code>&lt;![CDATA[/***<br />  Create |TableName| table.<br />***/<br /><br />PRINT 'Create |TableName| table'<br />GO<br /><br />IF (EXISTS (SELECT name FROM sysobjects WHERE (name = N'|TableName|') AND (type = 'U')))<br />BEGIN<br />  DROP TABLE [dbo].[|TableName|]<br />END<br />GO<br /><br />CREATE TABLE [dbo].[|TableName|] (<br />|*||end|<br /><br />|*|CONSTRAINT [PK_|TableName|_1] PRIMARY KEY CLUSTERED<br />|*|(<br />|*|)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]<br />) ON [PRIMARY]<br />GO<br /><br />GRANT SELECT ON [dbo].[|TableName|] TO [public]<br />GO]]&gt;<br /> </code><br /> <br /><br />&lt;/pre&gt;<br /><br /><b>Create Foreign Key Reference</b><br />&lt;pre&gt;<br /><br /><br />        version=”1.0.0”&gt;<br /> <br /> <br />      Create foreign key constraint for SQL Server.<br /> <br /> <br />      Kirby Turner<br /> <br /> <br /> <br />                PrimaryTableName<br /> <br /> <br /> <br /> <br /> <br /> <br />                SecondaryTableName<br /> <br /> <br /> <br /> <br /> <br /> <br />                ColumnName<br /> <br /> <br /> <br /> <br /> <code>&lt;![CDATA[ALTER TABLE [dbo].[|PrimaryTableName|] WITH CHECK ADD<br />CONSTRAINT [FK_|PrimaryTableName|_|SecondaryTableName|] FOREIGN KEY([|ColumnName|])<br />REFERENCES [dbo].[|SecondaryTableName|] ([|ColumnName|])<br />GO]]&gt;<br /> </code><br /> <br /><br />&lt;/pre&gt;<br /><br />Enjoy.</p>
]]></description>
    <content type="html"><![CDATA[<p>Here are a few Delphi (BDS) Live Templates I created for writting SQL Server script:<br /><br /><b>Create SQL Server Table</b><br />&lt;pre&gt;<br /><br /><br />        version=”1.0.0”&gt;<br /> <br /> <br />      Create table for SQL Server.<br /> <br /> <br />      Kirby Turner<br /> <br /><br /> <br /> <br />        TableName<br /> <br /> <br /> <br /> <br /><br /> <code>&lt;![CDATA[/***<br />  Create |TableName| table.<br />***/<br /><br />PRINT 'Create |TableName| table'<br />GO<br /><br />IF (EXISTS (SELECT name FROM sysobjects WHERE (name = N'|TableName|') AND (type = 'U')))<br />BEGIN<br />  DROP TABLE [dbo].[|TableName|]<br />END<br />GO<br /><br />CREATE TABLE [dbo].[|TableName|] (<br />|*||end|<br /><br />|*|CONSTRAINT [PK_|TableName|_1] PRIMARY KEY CLUSTERED<br />|*|(<br />|*|)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]<br />) ON [PRIMARY]<br />GO<br /><br />GRANT SELECT ON [dbo].[|TableName|] TO [public]<br />GO]]&gt;<br /> </code><br /> <br /><br />&lt;/pre&gt;<br /><br /><b>Create Foreign Key Reference</b><br />&lt;pre&gt;<br /><br /><br />        version=”1.0.0”&gt;<br /> <br /> <br />      Create foreign key constraint for SQL Server.<br /> <br /> <br />      Kirby Turner<br /> <br /> <br /> <br />                PrimaryTableName<br /> <br /> <br /> <br /> <br /> <br /> <br />                SecondaryTableName<br /> <br /> <br /> <br /> <br /> <br /> <br />                ColumnName<br /> <br /> <br /> <br /> <br /> <code>&lt;![CDATA[ALTER TABLE [dbo].[|PrimaryTableName|] WITH CHECK ADD<br />CONSTRAINT [FK_|PrimaryTableName|_|SecondaryTableName|] FOREIGN KEY([|ColumnName|])<br />REFERENCES [dbo].[|SecondaryTableName|] ([|ColumnName|])<br />GO]]&gt;<br /> </code><br /> <br /><br />&lt;/pre&gt;<br /><br />Enjoy.</p>
]]></content>
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[CodeGear]]></title>
    
    <link href="http://www.thecave.com/2006/11/15/codegear/"/>
    <updated>2006-11-15T00:00:00+00:00</updated>
    <id>http://www.thecave.com/2006/11/15/codegear</id>
    <tag>delphi</tag>
    <description><![CDATA[<p>It’s official.  Borland’s Developer Tool Group, aka DTG, aka DevCo, has spun off.  The new company is called <a href="http://www.codegear.com/">CodeGear</a>. <br /><br />Here are various links about CodeGear and today’s announcement:&lt;ul&gt;<br />&lt;li&gt;<a href="http://blogs.borland.com/abauer/archive/2006/11/14/29345.aspx">CodeGear blog posting by Allen Bauer, CodeGear Chief Scientist</a><br />&lt;/li&gt;&lt;li&gt;<a href="http://bdn.borland.com/article/33818">Letter from Ben Smith, CEO CodeGear</a><br />&lt;/li&gt;&lt;li&gt;<a href="http://www.eweek.com/article2/0,1895,2059052,00.asp">Borland Spins Off Its Tools Unit</a><br />&lt;/li&gt;&lt;li&gt;<a href="http://www.eweek.com/article2/0,1895,2059084,00.asp">Borland Launches CodeGear to Supply Developers with Tools of the Trade</a><br />&lt;/li&gt;&lt;li&gt;<a href="http://bdn.borland.com/article/33817">Borland forms CodeGear - FAQ</a><br />&lt;/li&gt;&lt;/ul&gt;</p>
]]></description>
    <content type="html"><![CDATA[<p>It’s official.  Borland’s Developer Tool Group, aka DTG, aka DevCo, has spun off.  The new company is called <a href="http://www.codegear.com/">CodeGear</a>. <br /><br />Here are various links about CodeGear and today’s announcement:&lt;ul&gt;<br />&lt;li&gt;<a href="http://blogs.borland.com/abauer/archive/2006/11/14/29345.aspx">CodeGear blog posting by Allen Bauer, CodeGear Chief Scientist</a><br />&lt;/li&gt;&lt;li&gt;<a href="http://bdn.borland.com/article/33818">Letter from Ben Smith, CEO CodeGear</a><br />&lt;/li&gt;&lt;li&gt;<a href="http://www.eweek.com/article2/0,1895,2059052,00.asp">Borland Spins Off Its Tools Unit</a><br />&lt;/li&gt;&lt;li&gt;<a href="http://www.eweek.com/article2/0,1895,2059084,00.asp">Borland Launches CodeGear to Supply Developers with Tools of the Trade</a><br />&lt;/li&gt;&lt;li&gt;<a href="http://bdn.borland.com/article/33817">Borland forms CodeGear - FAQ</a><br />&lt;/li&gt;&lt;/ul&gt;</p>
]]></content>
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Delphi 2006 Survey]]></title>
    
    <link href="http://www.thecave.com/2006/10/30/delphi-2006-survey/"/>
    <updated>2006-10-30T00:00:00+00:00</updated>
    <id>http://www.thecave.com/2006/10/30/delphi-2006-survey</id>
    <tag>delphi</tag>
    <description><![CDATA[<p>Yesterday Nick Hodges announced that the <a href="http://infopoll.net/live/surveys/s30110.htm">Delphi 2006 Survey</a> is online.  Share your feedback by filling out this year’s survey.</p>
]]></description>
    <content type="html"><![CDATA[<p>Yesterday Nick Hodges announced that the <a href="http://infopoll.net/live/surveys/s30110.htm">Delphi 2006 Survey</a> is online.  Share your feedback by filling out this year’s survey.</p>
]]></content>
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Namespaces in Delphi]]></title>
    
    <link href="http://www.thecave.com/2006/10/25/namespaces-in-delphi/"/>
    <updated>2006-10-25T00:00:00+00:00</updated>
    <id>http://www.thecave.com/2006/10/25/namespaces-in-delphi</id>
    <tag>delphi</tag>
    <description><![CDATA[<p>Recently there have been some good postings about using namespaces in Delphi such as the ones <a href="http://blogs.borland.com/nickhodges/articles/28331.aspx">here</a>, <a href="http://blogs.teamb.com/rudyvelthuis/archive/2006/10/04/27817.aspx">here</a>, and <a href="http://blog.marcocantu.com/blog/delphidotnet_firstclass.html">here</a>.  I like how namespaces are implemented in Delphi but I have been slow to adopt them in my Delphi code (especially Win32 code).  The problem I have is that the BDS Project Manager has no collapsible view, or grouping for namespaces.  Instead, Project Manager lists the unit names.  My namespaces tend to be wordy which means I cannot easily see the unit name without making the Project Manager window very wide.<br /><br />It will be great if the next release of BDS provides some sort of grouping of namespaces within the Project Manager.  For example, each segment in the namespace could be represented as a folder that can expand and collapse.  And the contents of the folder would be the final unit name or additional namespaces contained within.  In other words, the Project Manager would look something like this when the following units are included:<br /><br />Units:<br /><br />WhitePeakSoftware.Data.DataProvider.pas<br />WhitePeakSoftware.Data.Providers.SqlProvider.pas<br />WhitePeakSoftware.Data.Providers.SqliteProvider.pas<br />WhitePeakSoftware.Net.MailClient.pas<br /><br />Project Manager:<br />&lt;pre&gt;<br />ProjectGroup<br />- MyProgram.exe<br />  + References<br />  - WhitePeakSoftware<br />    - Data<br />      - Providers<br />        - SqlProvider.pas<br />        - SqliteProvider.pas<br />      - DataProvider.pas<br />    - Net<br />      - MailClient.pas<br />&lt;/pre&gt;<br /><br />There is already a <a href="http://qc.borland.com/wc/qcmain.aspx?d=26677">feature request</a> in the QC that asks for namespace grouping.  Please vote for this feature if you are using namespaces in Delphi and you would like to see some type of namespace grouping.</p>
]]></description>
    <content type="html"><![CDATA[<p>Recently there have been some good postings about using namespaces in Delphi such as the ones <a href="http://blogs.borland.com/nickhodges/articles/28331.aspx">here</a>, <a href="http://blogs.teamb.com/rudyvelthuis/archive/2006/10/04/27817.aspx">here</a>, and <a href="http://blog.marcocantu.com/blog/delphidotnet_firstclass.html">here</a>.  I like how namespaces are implemented in Delphi but I have been slow to adopt them in my Delphi code (especially Win32 code).  The problem I have is that the BDS Project Manager has no collapsible view, or grouping for namespaces.  Instead, Project Manager lists the unit names.  My namespaces tend to be wordy which means I cannot easily see the unit name without making the Project Manager window very wide.<br /><br />It will be great if the next release of BDS provides some sort of grouping of namespaces within the Project Manager.  For example, each segment in the namespace could be represented as a folder that can expand and collapse.  And the contents of the folder would be the final unit name or additional namespaces contained within.  In other words, the Project Manager would look something like this when the following units are included:<br /><br />Units:<br /><br />WhitePeakSoftware.Data.DataProvider.pas<br />WhitePeakSoftware.Data.Providers.SqlProvider.pas<br />WhitePeakSoftware.Data.Providers.SqliteProvider.pas<br />WhitePeakSoftware.Net.MailClient.pas<br /><br />Project Manager:<br />&lt;pre&gt;<br />ProjectGroup<br />- MyProgram.exe<br />  + References<br />  - WhitePeakSoftware<br />    - Data<br />      - Providers<br />        - SqlProvider.pas<br />        - SqliteProvider.pas<br />      - DataProvider.pas<br />    - Net<br />      - MailClient.pas<br />&lt;/pre&gt;<br /><br />There is already a <a href="http://qc.borland.com/wc/qcmain.aspx?d=26677">feature request</a> in the QC that asks for namespace grouping.  Please vote for this feature if you are using namespaces in Delphi and you would like to see some type of namespace grouping.</p>
]]></content>
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Parse CSV or Tab Separated Files Using Delphi]]></title>
    
    <link href="http://www.thecave.com/2006/09/25/parse-csv-or-tab-separated-files-using-delphi/"/>
    <updated>2006-09-25T00:00:00+00:00</updated>
    <id>http://www.thecave.com/2006/09/25/parse-csv-or-tab-separated-files-using-delphi</id>
    <tag>delphi</tag>
    <description><![CDATA[<p>The <a href="http://www.whitepeaksoftware.com/delphi_csv_parser.aspx">wpsCsvParser</a> has been updated to support parsing Tab Separated Value files.  You can specify the value separator type by setting the new ValueSeparatorType property to either vsCsv or vsTab.  Or you can set the ValueSeparator property to any character you wish to use as the separator.  The default is vsCsv for CSV parsing.</p>
]]></description>
    <content type="html"><![CDATA[<p>The <a href="http://www.whitepeaksoftware.com/delphi_csv_parser.aspx">wpsCsvParser</a> has been updated to support parsing Tab Separated Value files.  You can specify the value separator type by setting the new ValueSeparatorType property to either vsCsv or vsTab.  Or you can set the ValueSeparator property to any character you wish to use as the separator.  The default is vsCsv for CSV parsing.</p>
]]></content>
  </entry>
  
</feed>