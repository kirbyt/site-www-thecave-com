<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: sql server | thecave | Kirby Turner's Blog]]></title>
  <link href="http://www.thecave.com/tag/sql-server/feed.xml" rel="self"/>
  <link href="http://www.thecave.com/"/>
  <updated>2018-12-26T02:41:43+00:00</updated>
  <id>http://www.thecave.com/</id>
  <author>
    <name><![CDATA[Kirby Turner]]></name>
    
  </author>

  
  <entry>
    
    <title type="html"><![CDATA[Connection Tool for SQL Server Updated]]></title>
    
    <link href="http://www.thecave.com/2007/04/26/connection-tool-for-sql-server-updated/"/>
    <updated>2007-04-26T00:00:00+00:00</updated>
    <id>http://www.thecave.com/2007/04/26/connection-tool-for-sql-server-updated</id>
    <tag>sql server</tag>
    <description><![CDATA[<p>I posted a new version of the <a href="http://www.whitepeaksoftware.com/connectiontool.aspx">Connection Tool for SQL Server</a>.  This free tool provides an easy way to test and build connection strings for SQL Server databases.  This latest version has improved support for Windows 98/ME and Windows Vista.<br /><br />One unfortunate side effect with this release is you must delete the ConnectionToolForSQLServer.exe.config file if you used the previous version.  This file is found in the same directory as the ConnectionToolForSQLServer.exe program file.  If you don’t you will get an error message similar to this:<br /><br />&lt;div class="quote"&gt;<br />ConnectionToolForSQlServer.exe<br /><br />This application has failed to start because the application configuration is incorrect. Reinstalling the application may fix this problem.<br />&lt;/div&gt;<br /><br />I explain the reason for this <a href="http://www.thecave.com/archive/2007/04/25/when_naming_a_configuration_file_programexeconfig_is_bad.aspx">here</a>.</p>
]]></description>
    <content type="html"><![CDATA[<p>I posted a new version of the <a href="http://www.whitepeaksoftware.com/connectiontool.aspx">Connection Tool for SQL Server</a>.  This free tool provides an easy way to test and build connection strings for SQL Server databases.  This latest version has improved support for Windows 98/ME and Windows Vista.<br /><br />One unfortunate side effect with this release is you must delete the ConnectionToolForSQLServer.exe.config file if you used the previous version.  This file is found in the same directory as the ConnectionToolForSQLServer.exe program file.  If you don’t you will get an error message similar to this:<br /><br />&lt;div class="quote"&gt;<br />ConnectionToolForSQlServer.exe<br /><br />This application has failed to start because the application configuration is incorrect. Reinstalling the application may fix this problem.<br />&lt;/div&gt;<br /><br />I explain the reason for this <a href="http://www.thecave.com/archive/2007/04/25/when_naming_a_configuration_file_programexeconfig_is_bad.aspx">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[One More Rant about SQL Server 2005]]></title>
    
    <link href="http://www.thecave.com/2006/05/04/one-more-rant-about-sql-server-2005/"/>
    <updated>2006-05-04T00:00:00+00:00</updated>
    <id>http://www.thecave.com/2006/05/04/one-more-rant-about-sql-server-2005</id>
    <tag>sql server</tag>
    <description><![CDATA[<p>Here’s another rant I have about SQL Server 2005.</p>

]]></description>
    <content type="html"><![CDATA[<p>Here’s another rant I have about SQL Server 2005.</p>

<p>Visual Studio supports a database project type.  I have used this project type for numerous projects.  It’s a great way to manage the script code for tables, stored procedures, views, and so on.</p>

<p>I first discovered the limited scripting abilities of SQL Server 2005 earlier today but I noticed the SQL Server 2005 installation process installed a copy of Visual Studio 2005 on my machine.  “Nice,” I thought.  “I’ll use it to open my database project and update my scripts from Visual Studio.”  But luck was not on my side today.</p>

<p>Even though the installation process for SQL Server 2005 installs Visual Studio, it does not install support for the database project type.  Guess I need to run the full Visual Studio installer, which seems silly to me.  After all Visual Studio supports a database project type AND a copy of Visual Studio was installed by SQL Server 2005, which is after all a database.  Seems to me it would be appropriate for the SQL Server 2005 installation to install the database project type if it is going to also install Visual Studio.  It’s definitely more appropriate than some of the things past versions of IE would install.  [Ever wonder why a web browser needs to install MDAC (Microsoft Data Access Components)?]</p>
]]></content>
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Limited Scripting in SQL Server 2005]]></title>
    
    <link href="http://www.thecave.com/2006/05/04/limited-scripting-in-sql-server-2005/"/>
    <updated>2006-05-04T00:00:00+00:00</updated>
    <id>http://www.thecave.com/2006/05/04/limited-scripting-in-sql-server-2005</id>
    <tag>sql server</tag>
    <description><![CDATA[<p>SQL Server 2005 has been out for some time now but I have only recently made the move to it.  I’ve been in the SQL Server 2000 world because of customers but my customers are finally making the move 2005.<br /><br />Overall I really like SQL Server 2005 and the new Management Studio is nice.  However, I’m really annoyed that the SQL Server 2005 team decided to do away with the database scripting feature found in SQL Server 2000.  <br /><br />In SQL Server 2000, you can script out each database object into individual files.  I do this so I can commit the DDL source for each into CVS, or to do revision comparisons, or to do a number of other tasks.  But you cannot easily script out each object in a database with SQL Server 2005.  Apparently this is a known limitation as seen <a href="http://lab.msdn.microsoft.com/productfeedback/viewfeedback.aspx?feedbackid=9eb6c773-2dbb-4a27-b9d8-225d6ed4385a">here</a>.<br /><br />One option I found is to <a href="http://www.sqlteam.com/item.asp?ItemID=23185">write a programming using .NET 2.0 and the SQL Management Object (SMO)</a>.  Unfortunately time is not a luxury I have and I have an immediate need to script out the each object in a database into individual files.  So I started down the path of script out each object individual.  <br /><br />Guess what?  It has its own set of problems.  First starters, there is not an option to generate a script that contains both the DROP and CREATE statements.  Instead what I do is generate the CREATE statement to a query window.  Next I generate the DROP statement to the clipboard followed by pasting the clipboard content to the query window.  Needless to say, this is a painful process, and I have hundreds of database objects to script out.<br /><br />I can’t believe the model used for generating scripts in previous versions of SQL Server did not make it into SQL Server 2005.  I would have expected the same functionality at a minimum, and possibly an improvement on past versions.  But I would never have guess it was removed completely.</p>
]]></description>
    <content type="html"><![CDATA[<p>SQL Server 2005 has been out for some time now but I have only recently made the move to it.  I’ve been in the SQL Server 2000 world because of customers but my customers are finally making the move 2005.<br /><br />Overall I really like SQL Server 2005 and the new Management Studio is nice.  However, I’m really annoyed that the SQL Server 2005 team decided to do away with the database scripting feature found in SQL Server 2000.  <br /><br />In SQL Server 2000, you can script out each database object into individual files.  I do this so I can commit the DDL source for each into CVS, or to do revision comparisons, or to do a number of other tasks.  But you cannot easily script out each object in a database with SQL Server 2005.  Apparently this is a known limitation as seen <a href="http://lab.msdn.microsoft.com/productfeedback/viewfeedback.aspx?feedbackid=9eb6c773-2dbb-4a27-b9d8-225d6ed4385a">here</a>.<br /><br />One option I found is to <a href="http://www.sqlteam.com/item.asp?ItemID=23185">write a programming using .NET 2.0 and the SQL Management Object (SMO)</a>.  Unfortunately time is not a luxury I have and I have an immediate need to script out the each object in a database into individual files.  So I started down the path of script out each object individual.  <br /><br />Guess what?  It has its own set of problems.  First starters, there is not an option to generate a script that contains both the DROP and CREATE statements.  Instead what I do is generate the CREATE statement to a query window.  Next I generate the DROP statement to the clipboard followed by pasting the clipboard content to the query window.  Needless to say, this is a painful process, and I have hundreds of database objects to script out.<br /><br />I can’t believe the model used for generating scripts in previous versions of SQL Server did not make it into SQL Server 2005.  I would have expected the same functionality at a minimum, and possibly an improvement on past versions.  But I would never have guess it was removed completely.</p>
]]></content>
  </entry>
  
</feed>