<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: os x | thecave | Kirby Turner's Blog]]></title>
  <link href="http://www.thecave.com/tag/os-x/feed.xml" rel="self"/>
  <link href="http://www.thecave.com/"/>
  <updated>2019-04-03T15:18:51+00:00</updated>
  <id>http://www.thecave.com/</id>
  <author>
    <name><![CDATA[Kirby Turner]]></name>
    
  </author>

  
  <entry>
    
    <title type="html"><![CDATA[Dispatch Async to Main Queue Doesn't Work With Modal Window on Mac OS X]]></title>
    
    <link href="http://www.thecave.com/2015/08/10/dispatch-async-to-main-queue-doesnt-work-with-modal-window-on-mac-os-x/"/>
    <updated>2015-08-10T11:09:01+00:00</updated>
    <id>http://www.thecave.com/2015/08/10/dispatch-async-to-main-queue-doesnt-work-with-modal-window-on-mac-os-x</id>
    <tag>os x</tag>
    <description><![CDATA[<p>I’ve been working on a Mac app lately, and while some things are similar to iOS, something are definitely different. One thing that is different are modal windows and run loops.</p>

]]></description>
    <content type="html"><![CDATA[<p>I’ve been working on a Mac app lately, and while some things are similar to iOS, something are definitely different. One thing that is different are modal windows and run loops.</p>

<p>When you display a modal view on iOS you don’t get a new run loop for the view, but when you display a modal window on OS X a new run loop is created for the window. This is not necessarily a big deal unless you have a habit of using <a href="https://developer.apple.com/library/ios/documentation/Performance/Reference/GCD_libdispatch_Ref/">GCD</a> to dispatch work between background and main queues. Let me give a more specific example.</p>

<p>I display a modal view, or in the cause of OS X, a modal window. The current view is managed by a view controller. User input is captured, then a URL request is sent off to a server on the Internet. The view controller is then notified when the URL request completes.</p>

<p>The typical pattern I follow for sending the request to the server and getting notified when done is to call a method that will dispatch the URL request to a background queue then dispatch to the main queue to call a block when complete. It looks something like this:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>- (void)sendSomething:(NSDictionary *)something completion:(void(^)(BOOL success, NSError *error))completion
{
  NSParameterAssert(something);
  dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
    // Send something out over the Internet.
    ...

    // All done. Assume success and error are already set.
    dispatch_async(dispatch_get_main_queue(), ^{
      if (completion) {
        completion(success, error);
      }
    });
  });
}
</code></pre>
</div>

<p>This is a simplified view of the pattern I often use. Call a method with a callback block. Perform some work on a background thread. When done, call the callback block on the main thread.</p>

<p>This pattern has served me well on iOS, but it has issues on Mac OS X when displaying a modal window.</p>

<p>When you display a modal window with <code class="highlighter-rouge">+[NSApp runModalForWindow:]</code> a new run loop is created for the window<sup id="fnref:1"><a href="#fn:1" class="footnote">1</a></sup>. That might seem fine until you call <code class="highlighter-rouge">dispatch_async(dispatch_get_main_queue(), ^{})</code> from a background thread. The block that you are trying to execute in the main queue will never run. And in my case, the <code class="highlighter-rouge">completion</code> block is never called. This means my modal window never receives the notification that the URL request completed. (NOTE: Mike Ash <a href="#update2">pointed out</a> that it’s not the new run loop that causes the problem.)</p>

<p>So how did I work around this problem?</p>

<p>Instead of dispatching the <code class="highlighter-rouge">completion()</code> to the main queue, I call it directly from the background thread. In the completion block itself, I decide how to get the code should run in the main thread. If my window isn’t modal, then I can use <code class="highlighter-rouge">dispatch_async(dispatch_get_main_queue(), ^{})</code>. But if my window is modal, which just happens to be the case for the app I’m working on, then I use <code class="highlighter-rouge">-performSelectorOnMainThread:withObject:waitUntilDone:</code>. So the code in my view controller looks something like this:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>- (void)someAction:(id)sender
{
  SomeHelper *helper = [[SomeHelper alloc] init];
  __weak __typeof__(self) weakSelf = self;
  [helper sendSomething:someValues completion:^(BOOL success, NSError *error) {
    __typeof__(self) strongSelf = weakSelf;
    if (strongSelf == nil) return;
    
    // This window is running modally with its own run loop. Therefore,
    // we cannot dispatch to the main queue. Instead, we must go old
    // school can call a selector on the main thread. In other words,
    // dispatch_async(dispatch_get_main_queue(), ^{}); does not work
    // here.
    
    NSMutableDictionary *userInfo = [NSMutableDictionary dictionary];
    userInfo[@"success"] = @(success);
    if (error) userInfo[@"error"] = error;
    
    [strongSelf performSelectorOnMainThread:@selector(completeSendSomething:) withObject:userInfo waitUntilDone:NO];
  }];
}

- (void)completeSendSomething:(NSDictionary *)userInfo
{
    ...
}
</code></pre>
</div>

<p>This pattern change now has me re-thinking how I use certain patterns in my code, especially for code that I intend on sharing between the two platforms.</p>

<p>Update: I posted a <a href="https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ApplicationKit/Classes/NSApplication_Class/index.html#//apple_ref/occ/instm/NSApplication/runModalForWindow:">sample project</a> that illustrates the problem. In writing the sample app, I learned that the scenario that causes the problem is when the modal window is presented via a block that is dispatched asynchronously on the main queue.</p>

<p><a name="update2"></a>Update 2: <a href="https://mikeash.com/pyblog/">Mike Ash</a> pointed out that NSRunLoop is reentrant but GCD serial queues are not and this is the reason, not my theory of a different event loop, the block isn’t executed. Mike said, “The main queue is already executing a block, and it won’t execute a new one until that one is done. This is a subtle way in which dispatch on the main queue isn’t the same as <code class="highlighter-rouge">performSelectorOnMainThread</code>.”</p>

<p>Good to know and thanks, Mike, for explaining what is happening.</p>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>From the <a href="https://github.com/kirbyt/MacModalDispatchAsyncProblem">Apple documentation</a> for <code class="highlighter-rouge">+[NSApp runModalForWindow:]</code>: “This method runs a modal event loop for the specified window synchronously. It displays the specified window, makes it key, starts the run loop, and processes events for that window. (You do not need to show the window yourself.) While the app is in that loop, it does not respond to any other events (including mouse, keyboard, or window-close events) unless they are associated with the window. It also does not perform any tasks (such as firing timers) that are not associated with the modal run loop. In other words, this method consumes only enough CPU time to process events and dispatch them to the action methods associated with the modal window.”&nbsp;<a href="#fnref:1" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[No WWDC Or SF Trip]]></title>
    
    <link href="http://www.thecave.com/2015/04/14/no-wwdc-or-sf-trip/"/>
    <updated>2015-04-14T13:20:56+00:00</updated>
    <id>http://www.thecave.com/2015/04/14/no-wwdc-or-sf-trip</id>
    <tag>os x</tag>
    <description><![CDATA[<p>Apple announced the dates for this year’s WWDC, and once again a lottery is being used to decide who gets to buy a ticket. I have no interesting is attending WWDC other than to attend the labs since I do have questions I would love to ask an Apple engineer. But it’s not worth spending $1599 on a ticket just for that.</p>

]]></description>
    <content type="html"><![CDATA[<p>Apple announced the dates for this year’s WWDC, and once again a lottery is being used to decide who gets to buy a ticket. I have no interesting is attending WWDC other than to attend the labs since I do have questions I would love to ask an Apple engineer. But it’s not worth spending $1599 on a ticket just for that.</p>

<p>Likewise, I’m struggling to justify spending the money to stay in San Francisco the week of WWDC just to hang out with friends and drink beer. Certainly reconnecting with friends and making news ones is very enjoyable, but there are cheaper ways for me to do that. So I’ve decided I’m not going to SF for this year’s WWDC.</p>
]]></content>
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Après Code: A New Developer Meetup In Stowe Vt]]></title>
    
    <link href="http://www.thecave.com/2015/03/05/apres-code-a-new-developer-meetup-in-stowe-vt/"/>
    <updated>2015-03-05T15:54:05+00:00</updated>
    <id>http://www.thecave.com/2015/03/05/apres-code-a-new-developer-meetup-in-stowe-vt</id>
    <tag>os x</tag>
    <description><![CDATA[<p>I started organizing developer related meetups in 2001 starting with a weekly happy hour for dev friends and co-workers. Over the years I ended up organizing different types of events, from monthly meetings that included speakers to parties and happy hours to annual snowboarding trips. I even started <a href="http://www.nshappyhour.org">NSHappyHour</a> for Mac and iOS developers, which is still going on each month in Salem, MA.</p>

]]></description>
    <content type="html"><![CDATA[<p>I started organizing developer related meetups in 2001 starting with a weekly happy hour for dev friends and co-workers. Over the years I ended up organizing different types of events, from monthly meetings that included speakers to parties and happy hours to annual snowboarding trips. I even started <a href="http://www.nshappyhour.org">NSHappyHour</a> for Mac and iOS developers, which is still going on each month in Salem, MA.</p>

<p>I realized as I prepared for my move to Stowe, VT, that I was burnt out organizing events and meetups. I stepped down as co-organizer of <a href="http://www.cocoaheadsboston.org">CocoaHeads Boston</a> a few months before my move, which gave me a chance to be just a regular attendee. That’s when I realized I was done organizing events for a while.</p>

<p>After moving to Vermont, I was asked by a few folks if I would start a <a href="http://cocoaheads.org">CocoaHeads</a> chapter in the Burlington area. I said no because I needed a break. The break I needed wasn’t just from being an organizer. I needed a break from attending developer focused gatherings and networking events too. And while it’s been a bit lonely not having local folks to talk shop with on a regular basis, I’ve enjoyed my break. But break time is over.</p>

<p>It’s been nearly two years since I was last responsible for a meetup, but that changes tonight with the first of many Après Code events.</p>

<p>I’ve been thinking about hosting a developer meetup in Stowe since I moved here, but I wasn’t initially sure there would be enough interest. However, in my short time here I’ve met other software developers living in the area. Some work for companies here in town while others work for shops in and around Burlington. And the number of developers in our small community is growing with companies like <a href="http://corp.inntopia.com/careers/">Inntopia hiring</a> more developers. Even though I knew there were developers living and working in the area, I wasn’t ready to commit to a monthly meetup just yet.</p>

<p>That changed two days before I left for Whistler. I was talking with a local dev friend, Maya Ropelip<sup id="fnref:1"><a href="#fn:1" class="footnote">1</a></sup>, about writing apps for iOS. During our chat I mentioned my idea for a local meetup. He got excited about the idea and thought the timing was right for hosting a software developer gathering in Stowe. He also agreed to be the co-host in case I need to skip a meetup. So that night I grabbed the domain name, setup a <a href="http://www.apres-code.com/">website</a>, and created a new group on <a href="http://www.meetup.com/Apres-Code/">meetup.com</a>.</p>

<p>Starting a new group just 48 hours before I leave the country for a week and a half wasn’t the smartest thing for me to do, but I did it anyways. And now that I’m back home, I’m scrambling to get the word out about tonight’s inaugural Après Code. So without further ado, I’m happy to officially announce <a href="http://www.apres-code.com/">Après Code</a>.</p>

<h1 id="what-is-après-code">What Is Après Code</h1>

<p>Après Code is an informal gathering of software developers in Stowe, Vermont. The gathering is a chance for those of us living in and around Stowe, or just visiting the area, to get together to talk about joys of producing software and writing code, seek help or assist others, and most importantly meet and get to know other fine folks in the our community. The group is open to professionals, hobbyists, and anyone with an interest in designing, programming and creating software, apps, and websites.</p>

<h2 id="when">When</h2>

<p>We meet the first Thursday of each month, starting tonight, at 6:30 pm and go until the last person leaves. We’re gathering at <a href="http://rimrocksmountaintavern.com/">Rimrock’s Tavern</a> though this could change in the future. But for now Rimrock’s is the place to be.</p>

<h2 id="more-information">More Information</h2>

<p>You can find more information about the group at the Après Code <a href="http://www.apres-code.com/">website</a>, and you can receive email reminders about future Après Code events by joining the Après Code <a href="http://www.meetup.com/Apres-Code/">meetup.com group</a>.</p>

<p>So if you happen to be in the area, whether you live in the Stowe area or are just visiting, stop by tonight to say hi.</p>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>I gotta get this guy on Twitter or some other social network.&nbsp;<a href="#fnref:1" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[For-In Loop vs Using Block]]></title>
    
    <link href="http://www.thecave.com/2015/02/20/for-in-loop-vs-using-block/"/>
    <updated>2015-02-20T18:17:18+00:00</updated>
    <id>http://www.thecave.com/2015/02/20/for-in-loop-vs-using-block</id>
    <tag>os x</tag>
    <description><![CDATA[<p>Brent Simmons talks about <a href="http://inessential.com/2015/02/19/looping_through_objects_in_an_array">for-in loops</a> in a recent post. In it he says:</p>

]]></description>
    <content type="html"><![CDATA[<p>Brent Simmons talks about <a href="http://inessential.com/2015/02/19/looping_through_objects_in_an_array">for-in loops</a> in a recent post. In it he says:</p>

<blockquote>
  <p>most of the time the for-in enumeration is the straightforward and less clever approach. (“Less clever” is a good thing.)</p>
</blockquote>

<p>I agree with Brent. I’m a fan of the for-in syntax. It’s straightforward and easy to read. But I have to admit in recent years I’ve been using <code class="highlighter-rouge">enumerateObjects​UsingBlock:</code> more often than for-in loops. I’ve been favoring the block syntax because something bbum <a href="http://stackoverflow.com/users/25646/bbum">said on Stack Overflow</a> a while back.</p>

<blockquote>
  <p><code class="highlighter-rouge">enumerateObjectsUsingBlock:</code> will be as fast or faster than fast enumeration (<code class="highlighter-rouge">for(... in ...</code>) uses the <code class="highlighter-rouge">NSFastEnumeration</code> support to implement enumeration). Fast enumeration requires translation from an internal representation to the representation for fast enumeration. There is overhead therein. Block-based enumeration allows the collection class to enumerate contents as quickly as the fastest traversal of the native storage format. Likely irrelevant for arrays, but it can be a huge difference for dictionaries.</p>
</blockquote>

<p>For those who don’t know who <a href="http://stackoverflow.com/users/25646/bbum">bbum</a> is, he’s Bill Bumgarner. He works at Apple and knows a thing or two about Cocoa. So I believe him when he says “<code class="highlighter-rouge">enumerateObjectsUsingBlock:</code> will be as fast or faster than fast enumeration.”</p>

]]></content>
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Recommended Software for Mac]]></title>
    
    <link href="http://www.thecave.com/2008/06/18/recommended-software-for-mac/"/>
    <updated>2008-06-18T00:00:00+00:00</updated>
    <id>http://www.thecave.com/2008/06/18/recommended-software-for-mac</id>
    <tag>os x</tag>
    <description><![CDATA[<p>A good friend of mine, who just bought an iMac, asked what Mac software I use regularly and recommend. Instead of emailing a reply to him, I decided to post my list of recommended software here for all to see.<br /><br />&lt;ul&gt;<br />&lt;li&gt;<a href="http://vmware.com/products/fusion/">VMware Fusion</a> - Although I spend less time in Windows these days, I still have to use it for various development projects. So when I need to use Windows, I rely on VMware Fusion, which allows me to run an instance of Windows from within OS X.&lt;/li&gt;<br />&lt;li&gt;Mail.app - This is the email program that comes with OS X.  I use it to manage all my emails.&lt;/li&gt;<br />&lt;li&gt;iCal - This also comes with OS X and I use it daily.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.spanningsync.com/">Spanning Sync</a> - I used this gem to synch my iCal calendars to Google calendars.  I currently synch 5 different calendars, a birthday calendar that I share with my wife, my personal calendar, my wife’s calendar, a calendar for trips, and my work calendar.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.nhoj.co.uk/youreinvited/">YAI (You Are Invited)</a> - This is a Mail.app plug-in that translates and transfers calendar invites from Outlook, Google, and others to iCal.&lt;/li&gt;<br />&lt;li&gt;Address Book - Another piece of software that comes with OS X.&lt;/li&gt;<br />&lt;li&gt;<a href="http://macromates.com/">TextMate</a> - Damn fine text editor.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.evernote.com/">Evernote</a> - For tracking various notes.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.openoffice.org/">Open Office</a> - For word processing, spreadsheet, etc.  I’m using the beta for version 3.0, which support the Aqua interface and does not require X11.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.adiumx.com/">Adium</a> - My IM client of choice. Adium supports different IM services including Messenger, Yahoo!, AIM, and Google Talk.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.apple.com/ilife/iphoto/">iPhoto</a> - From the iLife suite. I store all my photos in iPhoto libraries.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.apple.com/aperture/">Aperture</a> - While I store all my master images in iPhoto, I do all my editing, rating, etc in Aperture.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.apple.com/ilife/imovie/">iMoive</a> - From the iLife suite. iMovie makes publishing to YouTube a snap.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.apple.com/ilife/idvd/">iDVD</a> - From the iLife suite. Easy way to record movies for family members who can’t view my movies online.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.apple.com/ilife/garageband/">GarageBand</a> - From the iLife suite. I don’t use this much.  Typically I only use it to lay down background sound tracks to movies I create.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.videolan.org/vlc/">VLC</a> - For view various media files.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.panic.com/unison/">Unison</a> - For reading newsgroups.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.newsgator.com/INDIVIDUALS/NETNEWSWIRE/">NetNewsWire</a> - For reading RSS feeds.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.shirt-pocket.com/SuperDuper/">SuperDuper!</a> - For making back ups of my MBP.&lt;/li&gt;<br />&lt;li&gt;<a href="http://skitch.com/">Skitch</a> - For capturing screen shots and sharing images with others.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.mozilla.com/">FireFox</a> - Safari is nice, but I prefer FireFox.  I use it the majority of the time, and Safari only once in a while.&lt;/li&gt;<br />&lt;li&gt;<a href="http://cord.sourceforge.net/">CoRD</a> - Enables me to remote desktop into my various Windows servers.&lt;/li&gt;<br />&lt;/ul&gt;That’s my list of Mac software that I use regularly.</p>
]]></description>
    <content type="html"><![CDATA[<p>A good friend of mine, who just bought an iMac, asked what Mac software I use regularly and recommend. Instead of emailing a reply to him, I decided to post my list of recommended software here for all to see.<br /><br />&lt;ul&gt;<br />&lt;li&gt;<a href="http://vmware.com/products/fusion/">VMware Fusion</a> - Although I spend less time in Windows these days, I still have to use it for various development projects. So when I need to use Windows, I rely on VMware Fusion, which allows me to run an instance of Windows from within OS X.&lt;/li&gt;<br />&lt;li&gt;Mail.app - This is the email program that comes with OS X.  I use it to manage all my emails.&lt;/li&gt;<br />&lt;li&gt;iCal - This also comes with OS X and I use it daily.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.spanningsync.com/">Spanning Sync</a> - I used this gem to synch my iCal calendars to Google calendars.  I currently synch 5 different calendars, a birthday calendar that I share with my wife, my personal calendar, my wife’s calendar, a calendar for trips, and my work calendar.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.nhoj.co.uk/youreinvited/">YAI (You Are Invited)</a> - This is a Mail.app plug-in that translates and transfers calendar invites from Outlook, Google, and others to iCal.&lt;/li&gt;<br />&lt;li&gt;Address Book - Another piece of software that comes with OS X.&lt;/li&gt;<br />&lt;li&gt;<a href="http://macromates.com/">TextMate</a> - Damn fine text editor.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.evernote.com/">Evernote</a> - For tracking various notes.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.openoffice.org/">Open Office</a> - For word processing, spreadsheet, etc.  I’m using the beta for version 3.0, which support the Aqua interface and does not require X11.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.adiumx.com/">Adium</a> - My IM client of choice. Adium supports different IM services including Messenger, Yahoo!, AIM, and Google Talk.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.apple.com/ilife/iphoto/">iPhoto</a> - From the iLife suite. I store all my photos in iPhoto libraries.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.apple.com/aperture/">Aperture</a> - While I store all my master images in iPhoto, I do all my editing, rating, etc in Aperture.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.apple.com/ilife/imovie/">iMoive</a> - From the iLife suite. iMovie makes publishing to YouTube a snap.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.apple.com/ilife/idvd/">iDVD</a> - From the iLife suite. Easy way to record movies for family members who can’t view my movies online.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.apple.com/ilife/garageband/">GarageBand</a> - From the iLife suite. I don’t use this much.  Typically I only use it to lay down background sound tracks to movies I create.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.videolan.org/vlc/">VLC</a> - For view various media files.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.panic.com/unison/">Unison</a> - For reading newsgroups.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.newsgator.com/INDIVIDUALS/NETNEWSWIRE/">NetNewsWire</a> - For reading RSS feeds.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.shirt-pocket.com/SuperDuper/">SuperDuper!</a> - For making back ups of my MBP.&lt;/li&gt;<br />&lt;li&gt;<a href="http://skitch.com/">Skitch</a> - For capturing screen shots and sharing images with others.&lt;/li&gt;<br />&lt;li&gt;<a href="http://www.mozilla.com/">FireFox</a> - Safari is nice, but I prefer FireFox.  I use it the majority of the time, and Safari only once in a while.&lt;/li&gt;<br />&lt;li&gt;<a href="http://cord.sourceforge.net/">CoRD</a> - Enables me to remote desktop into my various Windows servers.&lt;/li&gt;<br />&lt;/ul&gt;That’s my list of Mac software that I use regularly.</p>
]]></content>
  </entry>
  
</feed>