<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: programming | thecave | A Hideout for Programmers, Indie Devs, Solopreneurs]]></title>
  <link href="http://www.thecave.com/category/programming/atom.xml" rel="self"/>
  <link href="http://www.thecave.com/"/>
  <updated>2017-04-16T23:23:14+00:00</updated>
  <id>http://www.thecave.com/</id>
  <author>
    <name><![CDATA[Kirby Turner]]></name>
    
  </author>

  
  <entry>
    <title type="html"><![CDATA[The Experienced Programmer's Guide to Getting Started with Swift]]></title>
    <link href="http://www.thecave.com/2017/02/02/the-experienced-programmers-guide-to-getting-started-with-swift/"/>
    <updated>2017-02-02T16:32:49+00:00</updated>
    <id>http://www.thecave.com/2017/02/02/the-experienced-programmers-guide-to-getting-started-with-swift</id>
    <description><![CDATA[<p>A couple Vermont-based software developers recently asked me how to get started with Swift and writing apps for iOS. I emailed them individually, but when I was asked again today, I thought, time to write a blog post.</p>

]]></description>
    <content type="html"><![CDATA[<p>A couple Vermont-based software developers recently asked me how to get started with Swift and writing apps for iOS. I emailed them individually, but when I was asked again today, I thought, time to write a blog post.</p>

<p>If you are an experienced programmer looking to get started with Swift and iOS development, I suggest starting with the <a href="https://developer.apple.com/swift/resources/">Apple developer guides</a>. I also recommend reading the language guide, available in the iBooks Store and <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/index.html#//apple_ref/doc/uid/TP40014097-CH3-ID0">online</a>. It is a dry read, but very detailed. Besides, I still find myself referring to it from time to time, so it is on my “must read” list for those new to Swift.</p>

<p>Another great place to get started is over at <a href="https://www.raywenderlich.com">raywenderlich.com</a>. The site contains tons of great tutorials, books, and videos. Some are free, others you pay for, but the materials are some of the best learning materials outside of Apple. Take a look at the <a href="https://www.raywenderlich.com/category/swift">Swift category</a> to get started.</p>

<p>If you are interested in game development, the book <em><a href="https://www.raywenderlich.com/store/2d-ios-tvos-games-by-tutorials">2D Apple Games</a></em> is an awesome read. It focuses on writing iOS games using Swift 3 and SpriteKit, giving you step by step instructions. I have read half the book so far, and it has been a blast learning how to create games for iOS (even though I am not a game developer).</p>

<p>Lastly, if you have an iPad, check out <a href="http://www.apple.com/swift/playgrounds/">Swift Playgrounds</a>. It teaches you how to code, which is not something you need if you are an experienced programmer, but from what I have heard, the advance lessons can be helpful in teaching experienced programmer how to write Swift code. Also, you can experiment with all aspects of the device, from accessing the various iOS frameworks, such as SpriteKit and UIKit, to directly controlling hardware, such as the gyroscope, accelerometer, and camera. (Download the Swift Playgrounds app <a href="https://itunes.apple.com/us/app/swift-playgrounds/id908519492?mt=8">here</a>.)</p>

<p>Hope this helps get you started.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How To Do A Case Insensitive Search Using Parse SDK]]></title>
    <link href="http://www.thecave.com/2015/12/03/how-to-do-a-case-insensitive-search-using-parse-sdk/"/>
    <updated>2015-12-03T15:16:56+00:00</updated>
    <id>http://www.thecave.com/2015/12/03/how-to-do-a-case-insensitive-search-using-parse-sdk</id>
    <description><![CDATA[<p>I recently came across this question about searching using the Parse SDK for iOS. Simon asks:</p>

]]></description>
    <content type="html"><![CDATA[<p>I recently came across this question about searching using the Parse SDK for iOS. Simon asks:</p>

<blockquote>
  <p>What would be the best practice for search in a large user database and return e..g 10 first results based on name or email?</p>
</blockquote>

<p>I’ve been doing a lot with <a href="https://www.parse.com">Parse</a> recently, from building a new iOS app to adding a license key <a href="http://www.whitepeaksoftware.com/licenselookup">lookup</a> feature to my company website, and the reason Simon’s question caught my attention was because I asked myself a similar question the other day when working on the license key lookup feature.</p>

<p>The license key data comes from my order processing provider. A customer who has lost they license key can visit my website and retrieve for their license information by entering their email address. The problem, however, is that the person might enter the email address using a different case than used when the order was placed. And Parse does not have a way to perform a case insensitive search on string values.</p>

<p>So how do you get around this problem? And as Simon asks, what are some best practices for searching data in Parse?</p>

<h2 id="force-strings-to-all-lowercase">Force Strings To All Lowercase</h2>

<p>For starters, you should force all string values that can be searched to lower case, and do the same with the search string entered by the user. This produces the same effect as performing a case insensitive search while getting around the fact that Parse, as well as other types of data stores, doesn’t support case insensitive searches.</p>

<p>While storing the string value in all lowercase works fine for some value types, such as an email address, it’s not ideal for other value types. A person’s first and last names are not something you want to store in lowercase only. After all, you will likely display the person’s name on a profile screen or in an email message, and you want to display the name exactly as entered by the person.</p>

<p>So how do you search by data such as a first or last name without the ability to perform a case insensitive search? Simple. You create a search field for each.</p>

<h2 id="define-search-fields">Define Search Fields</h2>

<p>Let’s say your Parse class contains three properties, <code class="highlighter-rouge">firstName</code>, <code class="highlighter-rouge">lastName</code>, and <code class="highlighter-rouge">email</code>. All three contain data entered by a person. When you add a new instance of this class to Parse containing the data entered by the person, you can force the value for <code class="highlighter-rouge">email</code> to be lowercase (e.g., <code class="highlighter-rouge">-[NSString lowercaseString]</code> if you’re using Objective-C). However, you don’t want to do this for <code class="highlighter-rouge">firstName</code> and <code class="highlighter-rouge">lastName</code>. Instead, you want to use search fields for those two properties.</p>

<p>To search on <code class="highlighter-rouge">firstName</code> and <code class="highlighter-rouge">lastName</code>, add two additional properties to your class, <code class="highlighter-rouge">firstNameSearch</code> and <code class="highlighter-rouge">lastNameSearch</code>. Then, just as you did with <code class="highlighter-rouge">email</code>, force the values for <code class="highlighter-rouge">firstNameSearch</code> and <code class="highlighter-rouge">lastNameSearch</code> to be all lowercase before saving the data to Parse. Now when you want to perform a search, use the search properties <code class="highlighter-rouge">firstNameSearch</code> and <code class="highlighter-rouge">lastNameSearch</code> instead of the other two.</p>

<p>Congratulations! You’ve achieved case insensitive searching in an environment that does not support it.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How To Present An Alert View Using UIAlertController When You Don't Have A View Controller]]></title>
    <link href="http://www.thecave.com/2015/09/28/how-to-present-an-alert-view-using-uialertcontroller-when-you-dont-have-a-view-controller/"/>
    <updated>2015-09-28T19:46:02+00:00</updated>
    <id>http://www.thecave.com/2015/09/28/how-to-present-an-alert-view-using-uialertcontroller-when-you-dont-have-a-view-controller</id>
    <description><![CDATA[<p>Over the summer I updated a number of apps to iOS 9. A common tasks for me was replacing the deprecated <code class="highlighter-rouge">UIAlertView</code> with new <code class="highlighter-rouge">UIAlertController</code> class. Generally this is easy to do, but there is one scenario that <code class="highlighter-rouge">UIAlertView</code> handles well that <code class="highlighter-rouge">UIAlertController</code> doesn’t support at all: displaying an alert view from parts of your code without a reference to the current view controller, for instance, displaying an alert view from the app delegate.</p>

]]></description>
    <content type="html"><![CDATA[<p>Over the summer I updated a number of apps to iOS 9. A common tasks for me was replacing the deprecated <code class="highlighter-rouge">UIAlertView</code> with new <code class="highlighter-rouge">UIAlertController</code> class. Generally this is easy to do, but there is one scenario that <code class="highlighter-rouge">UIAlertView</code> handles well that <code class="highlighter-rouge">UIAlertController</code> doesn’t support at all: displaying an alert view from parts of your code without a reference to the current view controller, for instance, displaying an alert view from the app delegate.</p>

<p>Trying to display an alert view using <code class="highlighter-rouge">UIAlertController</code> from a non-UI specific class such as the app delegate is a <a href="http://stackoverflow.com/questions/26952061/present-uialertcontroller-from-appdelegate">common problem</a>, and developers have found different <a href="http://stackoverflow.com/questions/26554894/how-to-present-uialertcontroller-when-not-in-a-view-controller">workarounds</a>. <a href="http://stackoverflow.com/a/30941356">One particular solution</a> that caught my eye was this one from agilityvision, who writes:</p>

<blockquote>
  <p>At WWDC I stopped in at one of the labs and asked an Apple Engineer this same question: “What was the best practice for displaying a UIAlertController?” And he said they had been getting this question a lot and we joked that they should have had a session on it. He said that internally Apple is creating a UIWindow with a transparent UIViewController and then presenting the UIAlertController on it.</p>
</blockquote>

<p>This got me thinking about how I would solve the problem for apps I work on. Liking the approach mentioned by the Apple Engineer, I decided to give that a try. But unlike some of the other solutions that use a category, I decided to create a new class, <code class="highlighter-rouge">WPSAlertController</code>, that is a subclass of <code class="highlighter-rouge">UIAlertController</code>, and provide additional convenience methods making it possible to display an alert view with a single call…like this:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>NSString *title = ...
NSString *message = ...
[WPSAlertController presentOkayAlertWithTitle:title message:message];
</code></pre>
</div>

<p>Or display the <code class="highlighter-rouge">localizedDescription</code> from an <code class="highlighter-rouge">NSError</code> object:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>[WPSAlertController presentOkayAlertWithError:error];
</code></pre>
</div>

<p>And of course, since <code class="highlighter-rouge">WPSAlertController</code> is a subclass of <code class="highlighter-rouge">UIAlertController</code>, you can create your alert the same way as you do using <code class="highlighter-rouge">UIAlertController</code>. The only difference is you call <code class="highlighter-rouge">show</code> to present the alert when you don’t have a view controller. For example:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>NSString *title = ...
NSString *message = ...
WPSAlertController *alertController = [WPSAlertController alertControllerWithTitle:title message:message preferredStyle:UIAlertControllerStyleAlert];
[alertController addAction:[UIAlertAction actionWithTitle:@"OK" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
  // Your code.
}]];

[alertController show];
</code></pre>
</div>

<p>You can grab the <a href="https://github.com/kirbyt/WPSKit/blob/master/WPSKit/UIKit/WPSAlertController.m">source code for <code class="highlighter-rouge">WPSAlertController</code></a> from my github repository and include it in your project, or use the entire <a href="https://github.com/kirbyt/WPSKit">WPSKit.framework</a> in your project if you want to use <code class="highlighter-rouge">WPSAlertController</code> plus other handy classes that I use when creating iOS apps.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tags And Categories]]></title>
    <link href="http://www.thecave.com/2015/09/21/tags-and-categories/"/>
    <updated>2015-09-21T23:45:44+00:00</updated>
    <id>http://www.thecave.com/2015/09/21/tags-and-categories</id>
    <description><![CDATA[<p>I’ve been doing a bit of tinkering here at thecave. I realized I was using categories as if they were tags and for one simple reason. I didn’t have a way to support tags. That is, until now.</p>

]]></description>
    <content type="html"><![CDATA[<p>I’ve been doing a bit of tinkering here at thecave. I realized I was using categories as if they were tags and for one simple reason. I didn’t have a way to support tags. That is, until now.</p>

<p>Tag support is provided in Jekyll, but I wanted something slightly different. I want the list of tags to appear at the end of a post just like the categories have for last couple of years. I searched for different ways to support tags with Jekyll, but I didn’t find anything suiting my needs. Then it occurred to me I could tweak the category plugins I use to work with tags, so that’s exactly what I did.</p>

<p>The <a href="https://github.com/recurser/jekyll-plugins">Jekyll category plugins</a> I use come from Dave Perretter. I made copies of <em>category_generator.rb</em> and <em>category_list_tags.rb</em> naming the new plugins <em>tag_generator.rb</em> and <em>tag_list_tags.rb</em>. Then I replace references to <code class="highlighter-rouge">categories</code> and <code class="highlighter-rouge">category</code> with <code class="highlighter-rouge">tags</code> and <code class="highlighter-rouge">tag</code> in the source code. And BAM! I now have tag support at thecave.com.</p>

<p>You can find the source code for the plugins in my site’s github <a href="https://github.com/kirbyt/site-www-thecave-com/tree/master/_plugins">repo</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Upcoming Share Extension Talk At 360idev-Min]]></title>
    <link href="http://www.thecave.com/2015/09/07/my-upcoming-share-extension-talk-at-360idev-min/"/>
    <updated>2015-09-07T15:37:39+00:00</updated>
    <id>http://www.thecave.com/2015/09/07/my-upcoming-share-extension-talk-at-360idev-min</id>
    <description><![CDATA[<p>I’m excited to be one of the speakers at the upcoming <a href="http://min.360idev.com">360idev-min</a> conference in Greenville, SC. In my talk I’ll share the things you need to know about when writing a share extension for your iOS app.</p>

]]></description>
    <content type="html"><![CDATA[<p>I’m excited to be one of the speakers at the upcoming <a href="http://min.360idev.com">360idev-min</a> conference in Greenville, SC. In my talk I’ll share the things you need to know about when writing a share extension for your iOS app.</p>

<p>If you plan to attend <a href="http://min.360idev.com">360idev-min</a>, then use the coupon code <strong>SpeakerFriend</strong> to save $100 when purchasing your ticket.</p>

<p>And let me know if you are attending so we can meet up in person.</p>

]]></content>
  </entry>
  
</feed>